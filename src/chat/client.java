/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.sql.*;;
import javax.net.*;
import java.io.*;
import java.net.*;
import javax.net.ServerSocketFactory;
import javax.net.ssl.*;
import javax.net.*;
import java.io.*;
import java.net.*;
import javax.imageio.ImageIO;
import java.awt.BorderLayout;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author sumit
 */
public class client extends javax.swing.JFrame {
        static String user = null;
        static int flag=0;
	static String passwd = null;
	private Socket socket = null;
	static String serverName =null;
	static int serverPort =0;
	ImageIcon images ;
        InputStream is;
    /**
     * Creates new form client
     */
    public client() {
        initComponents();
        disconnectpanel.setVisible(false);
        connect.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					connectActionPerformed(evt);
				}
			});
			 disconnect.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					disconnectActionPerformed(evt);
				}
			});
			   send.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					sendActionPerformed(evt);
				}
			});
		
				massagebox.setEditable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        top = new javax.swing.JPanel();
        topmain = new javax.swing.JPanel();
        userlabel = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        passwordlabel = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        connectionpanel = new javax.swing.JPanel();
        disconnectpanel = new javax.swing.JPanel();
        servertext = new javax.swing.JLabel();
        servername = new javax.swing.JLabel();
        portvalue = new javax.swing.JLabel();
        portname = new javax.swing.JLabel();
        disconnect = new javax.swing.JButton();
        connectpanel = new javax.swing.JPanel();
        server = new javax.swing.JLabel();
        serveraddress = new javax.swing.JTextField();
        port = new javax.swing.JLabel();
        serverport = new javax.swing.JTextField();
        connect = new javax.swing.JButton();
        activeuser = new javax.swing.JPanel();
        photo = new javax.swing.JLabel();
        messagepriview = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        massagebox = new javax.swing.JTextArea();
        message = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        top.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        topmain.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        userlabel.setText("username:");

        passwordlabel.setText("password:");

        login.setText("login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topmainLayout = new javax.swing.GroupLayout(topmain);
        topmain.setLayout(topmainLayout);
        topmainLayout.setHorizontalGroup(
            topmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topmainLayout.createSequentialGroup()
                .addComponent(userlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(login)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        topmainLayout.setVerticalGroup(
            topmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topmainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login)
                    .addComponent(passwordlabel)
                    .addComponent(username)
                    .addComponent(userlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        connectionpanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        connectionpanel.setPreferredSize(new java.awt.Dimension(28, 100));

        disconnectpanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        disconnectpanel.setPreferredSize(new java.awt.Dimension(28, 100));

        servertext.setText("connected at");

        servername.setText("127.0.0.1");

        portvalue.setText("port");

        portname.setText("8080");

        disconnect.setText("disconnect");

        javax.swing.GroupLayout disconnectpanelLayout = new javax.swing.GroupLayout(disconnectpanel);
        disconnectpanel.setLayout(disconnectpanelLayout);
        disconnectpanelLayout.setHorizontalGroup(
            disconnectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disconnectpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(servertext, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(servername, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(portvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(portname, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(disconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        disconnectpanelLayout.setVerticalGroup(
            disconnectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(disconnectpanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(disconnectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servername, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portname, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(disconnect)
                    .addComponent(servertext, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        connectpanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        connectpanel.setPreferredSize(new java.awt.Dimension(28, 100));

        server.setText("server");

        port.setText("port");

        connect.setText("connect");

        javax.swing.GroupLayout connectpanelLayout = new javax.swing.GroupLayout(connectpanel);
        connectpanel.setLayout(connectpanelLayout);
        connectpanelLayout.setHorizontalGroup(
            connectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(server, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(serveraddress, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(serverport, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(connect)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        connectpanelLayout.setVerticalGroup(
            connectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectpanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(connectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(server, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(connectpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(serveraddress)
                        .addComponent(port)
                        .addComponent(serverport, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(connect)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout connectionpanelLayout = new javax.swing.GroupLayout(connectionpanel);
        connectionpanel.setLayout(connectionpanelLayout);
        connectionpanelLayout.setHorizontalGroup(
            connectionpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(connectionpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(connectionpanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(disconnectpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
            .addGroup(connectionpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(connectionpanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(connectpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        connectionpanelLayout.setVerticalGroup(
            connectionpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(connectionpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(connectionpanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(disconnectpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(connectionpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(connectionpanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(connectpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout topLayout = new javax.swing.GroupLayout(top);
        top.setLayout(topLayout);
        topLayout.setHorizontalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(connectionpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
            .addComponent(topmain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        topLayout.setVerticalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topLayout.createSequentialGroup()
                .addComponent(topmain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(connectionpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        activeuser.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout activeuserLayout = new javax.swing.GroupLayout(activeuser);
        activeuser.setLayout(activeuserLayout);
        activeuserLayout.setHorizontalGroup(
            activeuserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 158, Short.MAX_VALUE)
            .addGroup(activeuserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
        );
        activeuserLayout.setVerticalGroup(
            activeuserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
            .addGroup(activeuserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(activeuserLayout.createSequentialGroup()
                    .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 19, Short.MAX_VALUE)))
        );

        messagepriview.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        massagebox.setColumns(20);
        massagebox.setRows(5);
        jScrollPane1.setViewportView(massagebox);

        javax.swing.GroupLayout messagepriviewLayout = new javax.swing.GroupLayout(messagepriview);
        messagepriview.setLayout(messagepriviewLayout);
        messagepriviewLayout.setHorizontalGroup(
            messagepriviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        messagepriviewLayout.setVerticalGroup(
            messagepriviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        send.setText("send");

        status.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        status.setText("         Active user ");

        javax.swing.GroupLayout mainpanelLayout = new javax.swing.GroupLayout(mainpanel);
        mainpanel.setLayout(mainpanelLayout);
        mainpanelLayout.setHorizontalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messagepriview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(activeuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        mainpanelLayout.setVerticalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addComponent(top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addComponent(messagepriview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(activeuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
                 if((login.getText()).equals("login"))
                 {
                  user=username.getText();
		  passwd=new String(password.getPassword());
                  String s=null;
                  photo.setIcon(null);
                  clientlogin cl = new clientlogin(user,passwd);
                  s = cl.reply();
                  if(s.equals(passwd))
	     	    {
			        JOptionPane.showMessageDialog(null,"correct user and passward");
				image im = new image(user);
                                images = im.reply();
                                photo.setIcon(images);
                                login.setText("logout");
                                flag=1;
		    }
			else 
			{
			    JOptionPane.showMessageDialog(null,"Wrong Password and Username");
                            password.setText("");
                            username.setText("");          
			}  
                 }
                 else
                 {
                 JOptionPane.showMessageDialog(null,"logout sucessfully");
                    password.setText("");
                    username.setText("");
                    photo.setIcon(null);
                 }
    }
    public void run()
	{   
	   System.out.println("Sumit kumar beniwal");
	   String b = "messagerecieve";
	    if(b.equals(Thread.currentThread().getName()))
	   {      
            } 
	}
	private void connectActionPerformed(java.awt.event.ActionEvent evt)
            {
                 if(flag==1)
                       {
		           serverName =serveraddress.getText();
		           serverPort = Integer.parseInt(serverport.getText());
                      try
                          {  socket = new Socket(serverName, serverPort);
                             System.out.println("Connected: " + socket);    
                             connectpanel.setVisible(false);
                             disconnectpanel.setVisible(true);
                          
                          }
                      catch(UnknownHostException uhe)
                           {  System.out.println("Host unknown: " + uhe.getMessage());
                           }
                      catch(IOException ioe)
                           {
                              System.out.println("Unexpected exception: " + ioe.getMessage());
                           }  
	                       Thread t1 = new Thread(){
	              public void run()
		           {
			       System.out.println("server side thread name is :"+Thread.currentThread().getName());
		         	while(true){
                            try
	                    {
		               is = socket.getInputStream();
                               InputStreamReader isr = new InputStreamReader(is);
                               BufferedReader br = new BufferedReader(isr);
                               String number = br.readLine();
                               massagebox.append(number+"\n");	
             	            }
            	            catch(Exception e)
	                    {	
                            System.out.println("msg not recive");	
                            }}}};
	                    t1.start();
                       }
                       else
                       {  
                           JOptionPane.showMessageDialog(null,"login first");
                           serveraddress.setText("");
                           serverport.setText("");
                       }
// TODO add your handling code here:
    }//GEN-LAST:event_loginActionPerformed

    /**
     * @param args the command line arguments
     */
	private void disconnectActionPerformed(java.awt.event.ActionEvent evt)
         {
                         try {
                        is.close();
                        socket.close();
                        } 
                        catch (IOException e) {
                        System.out.println(e);
                       }
         }
	private void sendActionPerformed(java.awt.event.ActionEvent evt)
             {
		  String msg = message.getText();
	      try{
                    OutputStream os = socket.getOutputStream();
                    OutputStreamWriter osw = new OutputStreamWriter(os);
                    BufferedWriter bw = new BufferedWriter(osw);
                    String sendMessage = msg + "\n";
                    bw.write(sendMessage);
                    bw.flush();
                    massagebox.append(sendMessage+"\n");		
	         }
	      catch(Exception e)
	         {
		  System.out.println("msg not send");
	         }} 
        public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
          try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel activeuser;
    private javax.swing.JButton connect;
    private javax.swing.JPanel connectionpanel;
    private javax.swing.JPanel connectpanel;
    private javax.swing.JButton disconnect;
    private javax.swing.JPanel disconnectpanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton login;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JTextArea massagebox;
    private javax.swing.JTextField message;
    private javax.swing.JPanel messagepriview;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordlabel;
    private javax.swing.JLabel photo;
    private javax.swing.JLabel port;
    private javax.swing.JLabel portname;
    private javax.swing.JLabel portvalue;
    private javax.swing.JButton send;
    private javax.swing.JLabel server;
    private javax.swing.JTextField serveraddress;
    private javax.swing.JLabel servername;
    private javax.swing.JTextField serverport;
    private javax.swing.JLabel servertext;
    private javax.swing.JLabel status;
    private javax.swing.JPanel top;
    private javax.swing.JPanel topmain;
    private javax.swing.JLabel userlabel;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
